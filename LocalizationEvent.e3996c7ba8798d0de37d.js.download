!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("lodash"),require("react"),require("react-dom"));else if("function"==typeof define&&define.amd)define(["lodash","react","react-dom"],t);else{var r="object"==typeof exports?t(require("lodash"),require("react"),require("react-dom")):t(e._,e.React17,e.ReactDOM17);for(var n in r)("object"==typeof exports?exports:e)[n]=r[n]}}(self,((e,t,r)=>(()=>{"use strict";var n={"4LQx":e=>{e.exports=r},luq0:t=>{t.exports=e},rpwy:(e,t)=>{t.DEFAULT_LOCALE="en-US"},th2Y:(e,t,r)=>{const{DEFAULT_LOCALE:n}=r("rpwy");t.A={locale:n,computedLocale:n,userId:0,country:"",countryCode:"",pageCtxId:"",isPro:!1,abTests:{},userAgent:"",knownCrawler:!1,csrfToken:"",browserLanguage:"",currency:"",pathParameters:{},queryParameters:{},userGuid:"",url:"",ip:"",referrer:"",organizationId:"",experience:{isBuyer:!1,isSeller:!1,isBusiness:!1,value:""},isMobile:!1,isTouch:!1,isIos:!1}},yHGu:e=>{e.exports=t}},o={};function a(e){var t=o[e];if(void 0!==t)return t.exports;var r=o[e]={exports:{}};return n[e](r,r.exports,a),r.exports}a.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return a.d(t,{a:t}),t},a.d=(e,t)=>{for(var r in t)a.o(t,r)&&!a.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var i=a("luq0"),s=a.n(i);const c="object"==typeof window&&window.window===window&&window||"object"==typeof a.g&&a.g.global===a.g&&a.g||"object"==typeof self&&self.self===self&&self,l=Symbol();const u=Symbol.for("globalEventBus"),d=c[u]=c[u]||new class{constructor(){this[l]=new Map}on(e,t){let r=this[l].get(e);r||(this[l].set(e,new Set),r=this[l].get(e)),r.add(t)}once(e,t){var r=this;const n=function(){r.off(e,n),t(...arguments)};this.on(e,n)}one(e,t){this.has(e)||this.on(e,t)}has(e){return this[l].has(e)}off(e,t){if(!this[l].has(e))return;if(void 0===t)return void this[l].delete(e);const r=this[l].get(e);r.delete(t),0===r.size&&this[l].delete(e)}emit(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];const o=this[l].get(e);o&&o.forEach((e=>{e(...r)}))}deferred(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];return Promise.resolve().then((()=>{this.emit(e,...r)}))}},g="OBS::LOGGER",f="debug",y="verbose",p="info",b="warn",h="error",m="critical",w=[f,y,p,b,h,m],v=w.reduce(((e,t)=>Object.assign(e,{[t]:function(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return d.deferred(g,{entity:e,enrichments:r,level:t})}})),{});Object.defineProperty(v,"force",{value:w.reduce(((e,t)=>Object.assign(e,{[t]:function(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return d.deferred(g,{entity:e,enrichments:r,level:t,force:true})}})),{})});const k=v;var O=a("th2Y");const j=()=>{const e=s().get(window,"initialData.FiverrContext");return e||(k.error({message:"Browser context does not exist, please ensure the run time owner sets one on the window scope before using this API"}),O.A)},E=e=>e.substr(0,2),x={"de-DE":"Deutsch","en-US":"English",es:"Español","fr-FR":"Français","it-IT":"Italiano","nl-NL":"Nederlands","pt-BR":"Português"},S={"en-US":"www","de-DE":"de",es:"es","fr-FR":"fr","pt-BR":"br","it-IT":"it","nl-NL":"nl"},_="en-US",L=(Object.keys(x),E(_)),R={};Object.keys(x).forEach((e=>{const t=e.toUpperCase().replace(/-/g,"_");R[t]=e}));const I=Object.values(S).join("|"),T=(new RegExp("^((".concat(I,")\\.){1,2}(dev\\.){0,1}fiverr.com$")),{ab:"аҧсуа",aa:"Afaraf",af:"Afrikaans",ak:"Akan",sq:"Shqip",am:"አማርኛ",ar:"العربية",an:"Aragonés",hy:"Հայերեն",as:"অসমীয়া",av:"магӀарул мацӀ",ae:"avesta",ay:"aymar aru",az:"azərbaycan dili",bm:"bamanankan",ba:"башҡорт теле",eu:"euskara",be:"Беларуская",bn:"বাংলা",bh:"भोजपुरी",bi:"Bislama",bs:"bosanski jezik",br:"brezhoneg",bg:"български език",my:"ဗမာစာ",ca:"Català",ch:"Chamoru",ce:"нохчийн мотт",ny:"chiCheŵa",zh:"中文 (简体)",cv:"чӑваш чӗлхи",kw:"Kernewek",co:"corsu",cr:"ᓀᐦᐃᔭᐍᐏᐣ",hr:"hrvatski",cs:"čeština",da:"dansk",nl:"Nederlands",en:"English",eo:"Esperanto",et:"eesti keel",ee:"Eʋegbe",fo:"føroyskt",fj:"vosa Vakaviti",fi:"suomen kieli",fr:"Français",ff:"Fulfulde",gl:"Galego",ka:"ქართული",de:"Deutsch",el:"Ελληνικά",gn:"Avañeẽ",gu:"ગુજરાતી",ht:"Kreyòl ayisyen",ha:"Hausa",he:"עברית",hz:"Otjiherero",hi:"हिंदी",ho:"Hiri Motu",hu:"Magyar",ia:"Interlingua",id:"Bahasa Indonesia",ga:"Gaeilge",ig:"Asụsụ Igbo",ik:"Iñupiatun",io:"Ido",is:"Íslenska",it:"Italiano",iu:"ᐃᓄᒃᑎᑐᑦ",ja:"日本語 (にほんご／にっぽんご)",jv:"basa Jawa",jw:"basa Jawa",kl:"kalaallisut",kn:"ಕನ್ನಡ",kr:"Kanuri",ks:"कश्मीरी",kk:"Қазақ тілі",km:"ភាសាខ្មែរ",ki:"Gĩkũyũ",rw:"Ikinyarwanda",ky:"кыргыз тили",kv:"коми кыв",kg:"KiKongo",ko:"한국어",ku:"Kurdî",kj:"Kuanyama",la:"latine",lb:"Lëtzebuergesch",lg:"Luganda",li:"Limburgs",ln:"Lingála",lo:"ພາສາລາວ",lt:"lietuvių kalba",lu:"Kiluba",lv:"latviešu valoda",gv:"Gaelg",mk:"македонски јазик",mg:"Malagasy fiteny",ms:"bahasa Melayu",ml:"മലയാളം",mt:"Malti",mi:"te reo Māori",mr:"मराठी",mh:"Kajin M̧ajeļ",mn:"монгол",na:"Ekakairũ Naoero",nv:"Diné bizaad",nb:"Norsk bokmål",nd:"isiNdebele",ne:"नेपाली",ng:"Owambo",nn:"Norsk nynorsk",no:"Norsk",ii:"ꆈꌠ꒿ Nuosuhxop",nr:"isiNdebele",oc:"Occitan",oj:"ᐊᓂᔑᓈᐯᒧᐎᓐ",om:"Afaan Oromoo",or:"ଓଡ଼ିଆ",os:"ирон æвзаг",pa:"ਪੰਜਾਬੀ",pi:"पाऴि",fa:"فارسی",pl:"Polski",ps:"پښتو",pt:"Português",qu:"Runa Simi",rm:"rumantsch grischun",rn:"kiRundi",ro:"Română",ru:"русский язык",sa:"संस्कृतम्",sc:"sardu",sd:"सिन्धी",se:"Davvisámegiella",sm:"gagana faa Samoa",sg:"yângâ tî sängö",sr:"српски језик",gd:"Gàidhlig",sn:"chiShona",si:"සිංහල",sk:"slovenčina",sl:"slovenščina",so:"Soomaaliga",st:"Sesotho",es:"Español",su:"Basa Sunda",sw:"Kiswahili",ss:"SiSwati",sv:"svenska",ta:"தமிழ்",te:"తెలుగు",tg:"тоҷикӣ",th:"ไทย",ti:"ትግርኛ",bo:"བོད་ཡིག",tk:"Türkmen",tl:"Wikang Tagalog",tn:"Setswana",to:"faka Tonga",tr:"Türkçe",ts:"Xitsonga",tt:"татарча",tw:"Twi",ty:"Reo Tahiti",ug:"Uyƣurqə",uk:"українська",ur:"اردو",uz:"zbek",ve:"Tshivenḓa",vi:"Tiếng Việt",vo:"Volapük",wa:"Walon",cy:"Cymraeg",wo:"Wollof",fy:"Frysk",xh:"isiXhosa",yi:"ייִדיש",yo:"Yorùbá",za:"Saɯ cueŋƅ"}),C=(Object.keys(T),e=>!!T[e]),A={FR:"fr",ES:"es",MX:"es",IT:"it",DE:"de",NL:"nl",BR:"pt",PT:"pt"},D=e=>function(){for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return d.deferred(e,{events:r})},P={send:D("OBS::BIG_QUERY")},z=["translated-ltr","translated-rtl"],B=()=>{const{locale:e,browserLanguage:t,countryCode:r,currency:n,computedLocale:o}=j(),a=(e=>{let{locale:t,browserLanguage:r,countryCode:n}=e,o=L;const a=t&&E(t);if(a!==o&&C(a))o=a;else{const e=r&&E(r);e!==o&&C(e)?o=e:A[n]&&(o=A[n])}return o})({countryCode:r,locale:e,browserLanguage:t});P.send({type:"localization_attributes_per_page",group:"technical_events",domain:{name:"Localization"},localization:{experience_locale:e,visitor_assumed_language:a,display_currency:n,formatting_locale:o}})},N=()=>{if(!window||!window.MutationObserver)return;const e=new MutationObserver((t=>{t.forEach((t=>{let{target:r}=t;if("HTML"!==r.nodeName)return;const n=r;(e=>z.some((t=>e.classList.contains(t))))(n)&&(e.disconnect(),P.send({type:"page_translated_by_extension",group:"user_action",domain:{name:"Localization"},localization:{experience_locale:j().locale,translation_source:"Google Translate",language_after_translation:n.lang}}))}))})),t=window.document.querySelector("html");e.observe(t,{attributes:!0,attributeFilter:["class"]})},M=()=>{B(),N()};a("yHGu"),a("4LQx");const q=["count","time","gauge","set","histogram"],F=q.reduce(((e,t)=>Object.assign(e,{[t]:function(e,r,n){let{rate:o,tags:a,enforceRate:i}=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};Object.entries({prefix:e,metric:r}).forEach(((e,t)=>{let[r,n]=e;if("string"!=typeof n||!n)throw new TypeError("Expected argument ".concat(t," (").concat(r,") to be a string. Instead got ").concat(typeof n," (").concat(n,")"))}));const s=[e,r].join(".");return d.deferred("OBS::STATS",{type:t,key:s,value:n,rate:o,tags:a,enforceRate:i})}})),{});Object.defineProperty(F,"prefix",{value:e=>q.reduce(((t,r)=>Object.assign(t,{[r]:F[r].bind(F,e)})),{})});const G=F;function K(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function U(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}const H=e=>{return function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?K(Object(r),!0).forEach((function(t){U(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):K(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({type:e.type,name:e.name,created_at:new Date(e.createdAt).toISOString(),duration:e.duration||null,value:e.value||null},{context_id:(t=e.context).id,user_id:t.userId.toString(),country_code:t.countryCode,browser:t.browserName,locale:t.locale,currency:t.currency,platform:t.platform});var t},Y=D("OBS::BIG_QUERY_MONICORE"),Q="monicore",V="mobile_web",W="web";class X extends Error{constructor(e){super(e),this.name="ContextNotFoundError"}}const J=()=>{const{pageCtxId:e,userId:t,countryCode:r,locale:n,isMobile:o,currency:a}=j();return{id:e||"",userId:t||"",countryCode:r||"",locale:n||"",currency:a||"",platform:o?V:W}},$=Date.now(),Z=window.performance&&window.performance.now?window.performance:{now:()=>Date.now()-$,timeOrigin:$},ee="event",te="error",re=[ee,te],ne="ADD_EVENT_ERROR",oe="ADD_ERROR_ERROR",ae=()=>Z.now()+(()=>{let e=Z.timeOrigin;return"number"!=typeof e&&(e=Z.timing&&Z.timing.navigationStart),e})(),ie=e=>!(!(0,i.isUndefined)(e)&&!(0,i.isString)(e))||(k.error("Expected value to be a string. Instead got a ".concat(typeof e),{caughtBy:Q,value:e}),!1),se=e=>!(!(0,i.isString)(e)||(0,i.isEmpty)(e))||(k.error("Expected name to be a string. Instead got a ".concat(typeof e),{caughtBy:Q,name:e}),!1),ce=()=>{G.count("monicore","context_not_found")},le=e=>(e=>{e.context.isKnownCrawler||Y(H(e))})(e),ue=(e,t)=>{try{return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:ee;if(se(e))if(re.includes(r)){ie(t)||(t=void 0);try{const n={name:e,value:t,type:r,createdAt:ae(),context:J()};le(n)}catch(e){e instanceof X?ce():k.warn(e,{caughtBy:Q,code:ne})}}else k.error('Expected "type" to be event or error. Instead got a '.concat(r),{caughtBy:Q,code:ne})}(e,t,te)}catch(e){k.warn(e,{caughtBy:Q,code:oe})}},de=(e,t,r)=>{const n="Layout component: ".concat(t,", failed on entry: ").concat(r,"."),o="layout.CSR.".concat(t,".").concat(r),a="layout.CSR_LOAD_CHUNK.".concat(t,".").concat(r),i=j();e instanceof Error&&"ChunkLoadError"===(null==e?void 0:e.name)?ue(a):(k.error(e,{context:i,description:n,componentName:t,entryName:r,package:"@fiverr-private/layout-sdk"}),ue(o))};try{M(window.initialData.LocalizationEvent)}catch(e){de(e,"LocalizationEvent","LocalizationEvent")}return{}})()));
//# sourceMappingURL=LocalizationEvent.e3996c7ba8798d0de37d.js.map